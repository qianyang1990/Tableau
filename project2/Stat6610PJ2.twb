<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Total (PJ2 (version 1))' inline='true' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PJ2 (version 1)' name='excel-direct.131lor20it6an417d4b751w27nsq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/PJ2 (version 1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.131lor20it6an417d4b751w27nsq' name='Total' table='[Total$]' type='table'>
          <columns gridOrigin='A1:G37:no:A1:G37:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='month' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='real' name='Gasoline per gallon' ordinal='4' />
            <column datatype='real' name='Electricity per kWh' ordinal='5' />
            <column datatype='real' name='Utility (piped) gas per therm' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasoline per gallon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasoline per gallon]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>Gasoline per gallon</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electricity per kWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electricity per kWh]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>Electricity per kWh</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Utility (piped) gas per therm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Utility (piped) gas per therm]</local-name>
            <parent-name>[Total]</parent-name>
            <remote-alias>Utility (piped) gas per therm</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Total]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G37:no:A1:G37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Electricity per kWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Gasoline per gallon]' role='measure' type='quantitative' />
      <column datatype='real' name='[Utility (piped) gas per therm]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column-instance column='[Electricity per kWh]' derivation='Avg' name='[avg:Electricity per kWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gasoline per gallon]' derivation='Avg' name='[avg:Gasoline per gallon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Utility (piped) gas per therm]' derivation='Avg' name='[avg:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Electricity per kWh]' derivation='Sum' name='[sum:Electricity per kWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gasoline per gallon]' derivation='Sum' name='[sum:Gasoline per gallon:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Utility (piped) gas per therm]' derivation='Sum' name='[sum:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
      <group caption='Action (City,Month)' hidden='true' name='[Action (City,Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.501511' measure-ordering='alphabetic' measure-percentage='0.498489' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Electricity per kWh:qk]&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[sum:Utility (piped) gas per therm:qk]&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[sum:Gasoline per gallon:qk]&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[sum:Electricity per kWh:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Utility (piped) gas per therm:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Gasoline per gallon:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Utility (PJ2 (version 1))' inline='true' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PJ2 (version 1)' name='excel-direct.0ezliyv1ewwi9l16pdi8b0wakpyo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/PJ2 (version 1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ezliyv1ewwi9l16pdi8b0wakpyo' name='Utility' table='[Utility$]' type='table'>
          <columns gridOrigin='A1:E37:no:A1:E37:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='month' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='real' name='Utility (piped) gas per therm' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Utility]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Utility]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Utility]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Utility]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Utility (piped) gas per therm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Utility (piped) gas per therm]</local-name>
            <parent-name>[Utility]</parent-name>
            <remote-alias>Utility (piped) gas per therm</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Utility]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E37:no:A1:E37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <group caption='Action (City,Month)' hidden='true' name='[Action (City,Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/Newpj2.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='03/09/2018 07:49:56 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='36' timestamp-start='2018-03-09 19:49:56.683' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>0</ordinal>
              <family>Utility</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Utility</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Utility</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>3</ordinal>
              <family>Utility</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Utility (piped) gas per therm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Utility (piped) gas per therm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Utility (piped) gas per therm</remote-alias>
              <ordinal>4</ordinal>
              <family>Utility</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.528067' measure-ordering='alphabetic' measure-percentage='0.471933' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Gasoline (PJ2 (version 1))' inline='true' name='federated.0d98wi51ha48ml1b3c2a41pgl9zl' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PJ2 (version 1)' name='excel-direct.0da3l1218ztmav18cplys17l9xaq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/PJ2 (version 1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0da3l1218ztmav18cplys17l9xaq' name='Gasoline' table='[Gasoline$]' type='table'>
          <columns gridOrigin='A1:E37:no:A1:E37:0' header='yes' outcome='2'>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='string' name='month' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='real' name='Gasoline per gallon' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasoline per gallon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasoline per gallon]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>Gasoline per gallon</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E37:no:A1:E37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <group caption='Action (City,Month)' hidden='true' name='[Action (City,Month)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[month]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/Stat6610Project2.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/10/2018 05:53:16 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='36' timestamp-start='2018-03-10 05:53:16.408' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>0</ordinal>
              <family>Electricity</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month1</remote-alias>
              <ordinal>1</ordinal>
              <family>Electricity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country1</remote-alias>
              <ordinal>2</ordinal>
              <family>Electricity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City1</remote-alias>
              <ordinal>3</ordinal>
              <family>Electricity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Electricity per kWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Electricity per kWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Electricity per kWh</remote-alias>
              <ordinal>4</ordinal>
              <family>Electricity</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>Gasoline</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>6</ordinal>
              <family>Gasoline</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>7</ordinal>
              <family>Gasoline</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>8</ordinal>
              <family>Gasoline</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gasoline per gallon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Gasoline per gallon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gasoline per gallon</remote-alias>
              <ordinal>9</ordinal>
              <family>Gasoline</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.528067' measure-ordering='alphabetic' measure-percentage='0.471933' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Electricity (PJ2 (version 1))' inline='true' name='federated.0x39xez0j51bhk1drgpsx1b96ijv' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='PJ2 (version 1)' name='excel-direct.1w1h0x50bsgct71fyfqg81vejly5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/PJ2 (version 1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Electricity].[Year]' />
              <expression op='[Gasoline].[Year]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1w1h0x50bsgct71fyfqg81vejly5' name='Electricity' table='[Electricity$]' type='table'>
            <columns gridOrigin='A1:E37:no:A1:E37:0' header='yes' outcome='2'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='month' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='real' name='Electricity per kWh' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.1w1h0x50bsgct71fyfqg81vejly5' name='Gasoline' table='[Gasoline$]' type='table'>
            <columns gridOrigin='A1:E37:no:A1:E37:0' header='yes' outcome='2'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='string' name='month' ordinal='1' />
              <column datatype='string' name='Country' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='real' name='Gasoline per gallon' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[City (Gasoline)]' value='[Gasoline].[City]' />
          <map key='[City]' value='[Electricity].[City]' />
          <map key='[Country (Gasoline)]' value='[Gasoline].[Country]' />
          <map key='[Country]' value='[Electricity].[Country]' />
          <map key='[Electricity per kWh]' value='[Electricity].[Electricity per kWh]' />
          <map key='[Gasoline per gallon]' value='[Gasoline].[Gasoline per gallon]' />
          <map key='[Year (Gasoline)]' value='[Gasoline].[Year]' />
          <map key='[Year]' value='[Electricity].[Year]' />
          <map key='[month (Gasoline)]' value='[Gasoline].[month]' />
          <map key='[month]' value='[Electricity].[month]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Electricity]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Electricity]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Electricity]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Electricity]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electricity per kWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electricity per kWh]</local-name>
            <parent-name>[Electricity]</parent-name>
            <remote-alias>Electricity per kWh</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electricity]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E37:no:A1:E37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Gasoline)]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month (Gasoline)]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Gasoline)]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (Gasoline)]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gasoline per gallon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gasoline per gallon]</local-name>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias>Gasoline per gallon</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Gasoline]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E37:no:A1:E37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City (Gasoline)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (Gasoline)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year (Gasoline)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/yangq/Desktop/2018 winter/STAT 6610 data visualiztion/project2/Stat6610Project2.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/10/2018 05:52:35 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[City (Gasoline)]' value='[Extract].[City]' />
            <map key='[City]' value='[Extract].[City1]' />
            <map key='[Country (Gasoline)]' value='[Extract].[Country]' />
            <map key='[Country]' value='[Extract].[Country1]' />
            <map key='[Electricity per kWh]' value='[Extract].[Electricity per kWh]' />
            <map key='[Gasoline per gallon]' value='[Extract].[Gasoline per gallon]' />
            <map key='[Year (Gasoline)]' value='[Extract].[Year]' />
            <map key='[Year]' value='[Extract].[Year1]' />
            <map key='[month (Gasoline)]' value='[Extract].[month]' />
            <map key='[month]' value='[Extract].[month1]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1296' timestamp-start='2018-03-10 05:52:35.408' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>0</ordinal>
              <family>Electricity</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month1</remote-alias>
              <ordinal>1</ordinal>
              <family>Electricity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country1</remote-alias>
              <ordinal>2</ordinal>
              <family>Electricity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City1</remote-alias>
              <ordinal>3</ordinal>
              <family>Electricity</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Electricity per kWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Electricity per kWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Electricity per kWh</remote-alias>
              <ordinal>4</ordinal>
              <family>Electricity</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (Gasoline)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>5</ordinal>
              <family>Gasoline</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>129</remote-type>
              <local-name>[month (Gasoline)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>6</ordinal>
              <family>Gasoline</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Gasoline)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>7</ordinal>
              <family>Gasoline</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City (Gasoline)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>8</ordinal>
              <family>Gasoline</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gasoline per gallon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Gasoline per gallon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gasoline per gallon</remote-alias>
              <ordinal>9</ordinal>
              <family>Gasoline</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.567568' measure-ordering='alphabetic' measure-percentage='0.432432' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0d98wi51ha48ml1b3c2a41pgl9zl'>
      <datasources>
        <datasource caption='Gasoline (PJ2 (version 1))' name='federated.0d98wi51ha48ml1b3c2a41pgl9zl' />
      </datasources>
      <datasource-dependencies datasource='federated.0d98wi51ha48ml1b3c2a41pgl9zl'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]'>
        <groupfilter from='&quot;Chicago&quot;' function='range' level='[none:City:nk]' to='&quot;San Francisco&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]' />
      </filter>
    </shared-view>
    <shared-view name='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
      <datasources>
        <datasource caption='Total (PJ2 (version 1))' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
      </datasources>
      <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]'>
        <groupfilter from='&quot;Chicago&quot;' function='range' level='[none:City:nk]' to='&quot;San Francisco&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]' />
      </filter>
    </shared-view>
    <shared-view name='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
      <datasources>
        <datasource caption='Utility (PJ2 (version 1))' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' />
      </datasources>
      <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='real' name='[Utility (piped) gas per therm]' role='measure' type='quantitative' />
        <column-instance column='[Utility (piped) gas per therm]' derivation='Avg' name='[avg:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[avg:Utility (piped) gas per therm:qk]' included-values='in-range'>
        <min>0.77749999999999997</min>
        <max>1.4279999999999999</max>
      </filter>
      <filter class='categorical' column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]'>
        <groupfilter from='&quot;Chicago&quot;' function='range' level='[none:City:nk]' to='&quot;San Francisco&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' />
      </filter>
    </shared-view>
    <shared-view name='federated.0x39xez0j51bhk1drgpsx1b96ijv'>
      <datasources>
        <datasource caption='Electricity (PJ2 (version 1))' name='federated.0x39xez0j51bhk1drgpsx1b96ijv' />
      </datasources>
      <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0x39xez0j51bhk1drgpsx1b96ijv'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]'>
        <groupfilter from='&quot;Chicago&quot;' function='range' level='[none:City:nk]' to='&quot;San Francisco&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='AverageGasolinePriceTimeseries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='MonthlyElectricityPriceComparisonBar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AverageEnergyPriceComparisonMap'>
      <table>
        <view>
          <datasources>
            <datasource caption='Total (PJ2 (version 1))' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
            <datasource caption='Utility (PJ2 (version 1))' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Electricity per kWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Gasoline per gallon]' role='measure' type='quantitative' />
            <column datatype='real' name='[Utility (piped) gas per therm]' role='measure' type='quantitative' />
            <column-instance column='[Electricity per kWh]' derivation='Avg' name='[avg:Electricity per kWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gasoline per gallon]' derivation='Avg' name='[avg:Gasoline per gallon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Utility (piped) gas per therm]' derivation='Avg' name='[avg:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electricity per kWh]' derivation='Sum' name='[sum:Electricity per kWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gasoline per gallon]' derivation='Sum' name='[sum:Gasoline per gallon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Utility (piped) gas per therm]' derivation='Sum' name='[sum:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <sort class='manual' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Electricity per kWh:qk]&quot;</bucket>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Utility (piped) gas per therm:qk]&quot;</bucket>
              <bucket>&quot;[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[sum:Gasoline per gallon:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Electricity per kWh:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Gasoline per gallon:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Utility (piped) gas per therm:qk]' included-values='all' />
          <slices>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Electricity per kWh:qk]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Gasoline per gallon:qk]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Utility (piped) gas per therm:qk]</column>
            <column>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[Longitude (generated)]' field-type='quantitative' max='-7066247.117569996' min='-14458274.557253266' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[Latitude (generated)]' field-type='quantitative' max='9195962.0584133789' min='3338128.9930039947' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]' />
              <size column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[Multiple Values]' />
              <lod column='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0828728675842285' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[Latitude (generated)]</rows>
        <cols>([federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:Country:nk] * [federated.0tcn9bm0xdp9gi15rn2l20yczr62].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='AverageGasolinePriceTimeseries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Gasoline (PJ2 (version 1))' name='federated.0d98wi51ha48ml1b3c2a41pgl9zl' />
            <datasource caption='Total (PJ2 (version 1))' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
            <datasource caption='Utility (PJ2 (version 1))' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' />
          </datasources>
          <datasource-dependencies datasource='federated.0d98wi51ha48ml1b3c2a41pgl9zl'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Gasoline per gallon]' role='measure' type='quantitative' />
            <column-instance column='[Gasoline per gallon]' derivation='Avg' name='[avg:Gasoline per gallon:qk]' pivot='key' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[avg:Gasoline per gallon:qk]' included-values='all' />
          <filter class='categorical' column='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]</column>
            <column>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[avg:Gasoline per gallon:qk]</column>
            <column>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[avg:Gasoline per gallon:qk]' field-type='quantitative' max='3.0706666666666669' min='1.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[avg:Gasoline per gallon:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[avg:Gasoline per gallon:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[avg:Gasoline per gallon:qk]</rows>
        <cols>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:month:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='AverageUtilityPriceComparison'>
      <table>
        <view>
          <datasources>
            <datasource caption='Utility (PJ2 (version 1))' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' />
            <datasource caption='Total (PJ2 (version 1))' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
          </datasources>
          <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Utility (piped) gas per therm]' role='measure' type='quantitative' />
            <column-instance column='[Utility (piped) gas per therm]' derivation='Avg' name='[avg:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Utility (piped) gas per therm]' derivation='Sum' name='[sum:Utility (piped) gas per therm:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ujys0s1p05wce1f0fw5e0qadcol].[sum:Utility (piped) gas per therm:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]</column>
            <column>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[avg:Utility (piped) gas per therm:qk]</column>
            <column>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[:Measure Names]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[avg:Utility (piped) gas per therm:qk]' />
              <text column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' />
              <text column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[avg:Utility (piped) gas per therm:qk]' />
              <color column='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='MonthlyElectricityPriceComparisonBar'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electricity (PJ2 (version 1))' name='federated.0x39xez0j51bhk1drgpsx1b96ijv' />
            <datasource caption='Total (PJ2 (version 1))' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
            <datasource caption='Utility (PJ2 (version 1))' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' />
          </datasources>
          <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x39xez0j51bhk1drgpsx1b96ijv'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Electricity per kWh]' role='measure' type='quantitative' />
            <column caption='Month' datatype='string' name='[month]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[month]' derivation='None' name='[none:month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electricity per kWh]' derivation='Sum' name='[sum:Electricity per kWh:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' />
          </filter>
          <filter class='quantitative' column='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]' included-values='all' />
          <slices>
            <column>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]</column>
            <column>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]</column>
            <column>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]</column>
            <column>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='total' field='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' data-class='subtotal' field='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='display' field='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]</rows>
        <cols>([federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:month:nk] / [federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Total (PJ2 (version 1))' name='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
        <datasource caption='Utility (PJ2 (version 1))' name='federated.0ujys0s1p05wce1f0fw5e0qadcol' />
      </datasources>
      <datasource-dependencies datasource='federated.0tcn9bm0xdp9gi15rn2l20yczr62' />
      <datasource-dependencies datasource='federated.0ujys0s1p05wce1f0fw5e0qadcol'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='84300' x='800' y='1000'>
              <zone h='49000' id='1' name='AverageGasolinePriceTimeseries' w='45500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='MonthlyElectricityPriceComparisonBar' w='45500' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='25' name='AverageUtilityPriceComparison' w='38800' x='46300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='26' name='AverageEnergyPriceComparisonMap' w='38800' x='46300' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='141' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='14100' x='85100' y='1000'>
              <zone h='11625' id='6' name='AverageGasolinePriceTimeseries' pane-specification-id='0' param='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]' type='color' w='14100' x='85100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16000' id='8' name='MonthlyElectricityPriceComparisonBar' param='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' type='filter' values='relevant' w='14100' x='85100' y='12625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16000' id='33' name='AverageEnergyPriceComparisonMap' param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]' type='filter' w='14100' x='85100' y='28625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11625' id='32' name='AverageEnergyPriceComparisonMap' pane-specification-id='0' param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]' type='color' w='14100' x='85100' y='44625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='93'>
    <window class='worksheet' name='MonthlyElectricityPriceComparisonBar'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='filters' />
            <card type='marks' />
            <card type='pages' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AverageEnergyPriceComparisonMap'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]' type='filter' values='relevant' />
            <card param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Utility (piped) gas per therm:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Gasoline per gallon:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[avg:Electricity per kWh:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[Multiple Values]' type='size' />
            <card pane-specification-id='0' param='[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[:Measure Names]</field>
            <field>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]</field>
            <field>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AverageGasolinePriceTimeseries'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]</field>
            <field>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:month:nk]</field>
            <field>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:City:nk]</field>
            <field>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:Year:qk]</field>
            <field>[federated.0tcn9bm0xdp9gi15rn2l20yczr62].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='AverageUtilityPriceComparison'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[avg:Utility (piped) gas per therm:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0d98wi51ha48ml1b3c2a41pgl9zl].[none:City:nk]</field>
            <field>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[:Measure Names]</field>
            <field>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:City:nk]</field>
            <field>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:Year:qk]</field>
            <field>[federated.0ujys0s1p05wce1f0fw5e0qadcol].[none:month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='AverageEnergyPriceComparisonMap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='AverageGasolinePriceTimeseries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='AverageUtilityPriceComparison' />
        <viewpoint name='MonthlyElectricityPriceComparisonBar'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:month:nk]</field>
                      <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:City:nk]</field>
                    <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[none:month:nk]</field>
                    <field>[federated.0x39xez0j51bhk1drgpsx1b96ijv].[sum:Electricity per kWh:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;San Francisco&quot;</value>
                  <value>&quot;August&quot;</value>
                  <value>0.20000000000000001</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='33' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AverageEnergyPriceComparisonMap' width='192'>
      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
      1OvkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='AverageGasolinePriceTimeseries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='AverageUtilityPriceComparison' width='192'>
      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
      ejsl4P8Dz34aBolS3X0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='MonthlyElectricityPriceComparisonBar' width='192'>
      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
      tJ5O628AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
